@layer components {
  /* ----- モノクロバリエーション（ソリッド） ----- */

  /* 
   * @component: button
   * @variant: solid
   * @description: 塗りつぶしスタイルのボタン。色は別途カラークラスで指定します。
   * @category: interactive
   * @example: <button class="btn-base btn-solid color-primary">ソリッドボタン</button>
   */
  .btn-solid {
    background-color: var(--component-color, #333);
    color: var(--component-text, #fff);
    border-color: var(--component-border, #333);
  }

  .btn-solid:hover {
    background-color: var(--component-hover-color, color-mix(in srgb, var(--component-color, #333), #000 10%));
  }

  .btn-solid:active {
    background-color: var(--component-active-color, color-mix(in srgb, var(--component-color, #333), #000 20%));
  }

  /* 
   * @component: button
   * @variant: outline
   * @description: アウトラインスタイルのボタン。枠線のみで、ホバー時に背景色が表示されます。
   * @category: interactive
   * @example: <button class="btn-base btn-outline color-primary">アウトラインボタン</button>
   */
  .btn-outline {
    background-color: transparent;
    color: var(--component-color, #333);
    border-color: var(--component-border, #333);
  }

  .btn-outline:hover {
    background-color: color-mix(
      in srgb,
      var(--component-color, #333),
      transparent calc(100% - var(--btn-outline-hover-opacity, 0.1) * 100%)
    );
  }

  .btn-outline:active {
    background-color: color-mix(
      in srgb,
      var(--component-color, #333),
      transparent 80%
    );
  }

  /* 
   * @component: button
   * @variant: ghost
   * @description: ゴーストスタイルのボタン。背景色も枠線もなく、ホバー時に薄い背景色が表示されます。
   * @category: interactive
   * @example: <button class="btn-base btn-ghost color-primary">ゴーストボタン</button>
   */
  .btn-ghost {
    background-color: transparent;
    color: var(--component-color, #333);
    border-color: transparent;
  }

  .btn-ghost:hover {
    background-color: color-mix(
      in srgb,
      var(--component-color, #333),
      transparent calc(100% - var(--btn-ghost-hover-opacity, 0.1) * 100%)
    );
  }

  .btn-ghost:active {
    background-color: color-mix(
      in srgb,
      var(--component-color, #333),
      transparent 90%
    );
  }

  /* 
   * @component: button
   * @variant: link
   * @description: リンク風ボタン。通常のテキストリンクのような見た目で、ホバー時に下線が表示されます。
   * @category: interactive
   * @example: <button class="btn-base btn-link color-primary">リンクボタン</button>
   */
  .btn-link {
    background-color: transparent;
    color: var(--component-color, #333);
    border-color: transparent;
    padding: 0;
    text-decoration: underline;
    font-weight: normal;
  }

  .btn-link:hover {
    color: var(--component-hover-color, color-mix(in srgb, var(--component-color, #333), #000 10%));
    text-decoration: underline;
  }

  /* 
   * @component: button
   * @variant: gradient
   * @description: グラデーションスタイルのボタン。グラデーション効果が適用されます。
   * @category: interactive
   * @example: <button class="btn-base btn-gradient color-primary">グラデーションボタン</button>
   */
  .btn-gradient {
    background: linear-gradient(
      135deg,
      var(--component-color, #333),
      var(--component-hover-color, color-mix(in srgb, var(--component-color, #333), #000 10%))
    );
    color: var(--component-text, #fff);
    border-color: transparent;
  }

  .btn-gradient:hover {
    background: linear-gradient(
      135deg,
      var(--component-hover-color, color-mix(in srgb, var(--component-color, #333), #000 10%)),
      var(--component-color, #333)
    );
  }

  /* ダークモード調整 */
  .dark .btn-outline,
  .dark .btn-ghost,
  .dark .btn-link {
    color: var(--component-text, #fff);
  }
}
