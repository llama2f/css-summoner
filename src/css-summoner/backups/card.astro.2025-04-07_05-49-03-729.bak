---
/**
	* Card コンポーネント ドキュメント
	*
	* このファイルはスクリプトによって自動生成されました。
	* 元のCSSファイルのアノテーション、または generate-astro.js を編集してください。
	* ソース: card/variants.css, card/base.css
	*/
import DocLayout from '@layouts/DocLayout.astro'; // 正しいエイリアスを使用
import VariantPreview from '@/css-summoner/components/astro/VariantPreview.astro'; // 作成したコンポーネントをインポート

const pageTitle = "Card コンポーネント";
const pageDesc = "Card コンポーネントのスタイルバリエーションと使用例。";

// --- フロントマターに変数を渡す ---
const baseClassName = "card-base"; // baseClassName を文字列として渡す
const variantsData = [{"variant":"actions","className":"card-actions","description":"カード内でのアクションボタンをグループ化するための領域。","previewHtml":"<div class=\"card-base card-solid color-neutral\">\n<div class=\"card-body\">...</div>\n<div class=\"card-actions\">...</div>\n</div>"},{"variant":"bordered","className":"card-bordered","description":"カードに明示的な境界線を追加します。","previewHtml":"<div class=\"card-base card-solid color-neutral card-bordered\">境界線付きカード</div>"},{"variant":"compact","className":"card-compact","description":"カード内のパディングを減らし、コンパクトな表示にします。","previewHtml":"<div class=\"card-base card-solid color-neutral card-compact\">コンパクトカード</div>"},{"variant":"ghost","className":"card-ghost","description":"ゴーストスタイルのカード。背景色も枠線もなく、ホバー時に薄い背景色が表示されます。","previewHtml":"<div class=\"card-base card-ghost color-secondary\">ゴーストカード</div>"},{"variant":"horizontal","className":"card-horizontal","description":"画像とコンテンツが横並びになるカード。モバイルでは縦並びになるレスポンシブ対応です。","previewHtml":"<div class=\"card-base card-solid color-neutral card-horizontal\">...</div>"},{"variant":"outline","className":"card-outline","description":"アウトラインスタイルのカード。枠線のみで背景は透明です。","previewHtml":"<div class=\"card-base card-outline color-primary\">アウトラインカード</div>"},{"variant":"solid","className":"card-solid","description":"塗りつぶしスタイルのカード。背景色とテキスト色が適用されます。","previewHtml":"<div class=\"card-base card-solid color-neutral\">ソリッドカード</div>"},{"variant":"subtle","className":"card-subtle","description":"控えめなカード。薄い背景色が適用され、ホバー時に色が濃くなります。","previewHtml":"<div class=\"card-base card-subtle color-accent\">サブトルカード</div>"}]; // バリアントデータの配列を渡す
const exampleCode = `<div class="card-base card-solid color-neutral">ソリッドカード</div>\n\n<div class="card-base card-outline color-primary">アウトラインカード</div>\n\n<div class="card-base card-ghost color-secondary">ゴーストカード</div>\n\n<div class="card-base card-subtle color-accent">サブトルカード</div>\n\n<div class="card-base card-solid color-neutral card-bordered">境界線付きカード</div>\n\n<div class="card-base card-solid color-neutral card-compact">コンパクトカード</div>\n\n<div class="card-base card-solid color-neutral card-horizontal">...</div>\n\n<div class="card-base card-solid color-neutral">
<div class="card-body">...</div>
<div class="card-actions">...</div>
</div>\n\n<div class="card-base card-solid color-neutral">...</div>`; // HTML文字列をテンプレートリテラル内で安全に展開
---

<DocLayout title={pageTitle} desc={pageDesc}>
		<div class="container mx-auto px-4 py-8">
			 <h1 class="text-3xl font-bold mb-4">{pageTitle}</h1>
			 <p class="text-lg text-neutral-600 mb-6">
			   すべてのカードの基本スタイル。コンテナとしての基本的な構造とレイアウトを提供します。
			   {/* フロントマターの baseClassName を参照 */}
			   {baseClassName && <code class="ml-2 text-sm bg-neutral-200 p-1 rounded">.{baseClassName}</code>}
			 </p>
			 <div class="mb-6">
			   <a href="/" class="text-primary hover:underline">
			     ← back to css-summoner
			   </a>
			 </div>

			 {/* バリアントデータをループして VariantPreview コンポーネントを表示 */}
			 {variantsData.length > 0 && (
			   <section class="mb-12">
			     <h2 class="text-2xl font-semibold mb-6 border-b pb-2">バリアント</h2>
			     <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
			       {variantsData.map(variantProps => (
			         <VariantPreview {...variantProps} />
			       ))}
			     </div>
			   </section>
			 )}

			 <section class="mb-12">
			   <h2 class="text-2xl font-semibold mb-6 border-b pb-2">使用例</h2>
			   <div class="container-example">
			     {/* HTMLを直接レンダリング */}
			     <Fragment set:html={exampleCode} />
			   </div>
			 </section>

			 <div class="mt-6">
			   <a href="/" class="text-primary hover:underline">
			     ← クラスビルダーに戻る
			   </a>
			 </div>
		</div>
</DocLayout>
