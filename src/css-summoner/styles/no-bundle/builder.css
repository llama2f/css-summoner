@layer base {
	input,
	textarea {
		background-color: var(--background);
		color: var(--foreground);
		border: var(--border) 1px solid;
	}
}

@layer components {
	.color-selector-container {
		@apply grid grid-cols-1 gap-2 mb-4;
		@apply overflow-y-auto max-h-56;
	}

	.label-color {
		@apply font-mono font-normal !p-0;
	}

	.color-wheel-btn {
		@apply tracking-tighter whitespace-normal;
	}

	.code-aria {
		@apply font-mono;
		font-size: 0.8rem;
		letter-spacing: 0.02em;
		background-color: #0d1117;
		color: var(--neutral-light);
		border: #3f4753 1px solid;
		border-radius: 4px;
		padding: 0.5rem;
	}

	pre code.hljs {
		font-size: 0.8rem;
		border-radius: 4px;
	}

	.label-custom::after {
		background-color: var(--accent);
	}

	.panel {
		@apply space-y-4 rounded-lg;
		@apply lg:col-span-2 lg:p-3;
	}

	.panel-preview {
		@apply order-none space-y-4 self-start;
		@apply lg:order-2 lg:col-span-6 lg:sticky lg:top-[2rem];
	}

	.panel-settings {
		@apply lg:order-1 lg:col-span-2;
	}

	.panel-components {
		@apply lg:order-none lg:col-span-2;
	}

	.selector-check {
		@apply text-xs flex-grow;
	}

	.selector-button {
		position: relative;
		overflow: hidden;
		@apply text-left justify-start;
	}

	.selector-button:hover {
		background-color: var(--primary-light) !important;
	}

	.selector-button::after {
		content: '';
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		height: 2px;
		background-color: transparent;
		transition: background-color 0.2s ease-in-out;
	}

	.selector-button:focus::after {
		background-color: var(--primary-light);
	}

	.selector-button.active {
		@apply bg-primary text-white font-medium shadow-sm;
	}

	.selector-component {
		@apply w-full;
	}

	.selector-variant {
		@apply w-full;
	}

	.selector-variant:hover::after {
		background-color: var(--primary);
	}

	.selector-size {
		@apply min-w-[60px] text-center;

		border: var(--neutral) 1px solid;
	}

	.selector-size:hover::after {
		background-color: var(--secondary);
	}

	.selector-size.active {
		@apply border-primary-dark;
	}

	.selector-radius {
		@apply min-w-[60px] text-center;

		border: var(--neutral) 1px solid;
	}

	.selector-radius:hover::after {
		background-color: var(--secondary);
	}

	.selector-radius.active {
		@apply border-primary-dark;
	}

	.label-config {
		color: var(--foreground);
		padding-bottom: 0.3rem;
		position: relative;

		@apply text-sm font-bold mb-2;
	}

	.label-config::after {
		content: '';
		position: absolute;
		bottom: 0;
		left: 0;
		width: 2rem;
		height: 2px;
		background-color: var(--primary);
	}

	.label-variant::after {
		background-color: var(--primary);
	}

	.label-size::after {
		background-color: var(--secondary);
	}

	.label-radius::after {
		background-color: var(--accent);
	}

	.label-component::after {
		background-color: var(--neutral-dark);
	}

	.container-config {
		@apply flex flex-row flex-wrap gap-2;

		&.container-config-components {
			@apply flex-col flex-nowrap gap-0;
		}
		&.container-config-variants {
			@apply flex-col flex-nowrap gap-0 max-h-60 overflow-y-auto;
		}
	}

	.mobile-menu .container-config {
		@apply p-1;
	}

	.category-header {
		font-weight: 500;
		border-left: 3px solid transparent;
		transition:
			border-color 0.2s ease-in-out,
			background-color 0.2s ease-in-out;

		@apply text-sm font-bold bg-neutral-400/20 text-neutral-dark dark:text-neutral-light w-full flex justify-between items-center p-2 transition-colors text-left;
	}

	.category-header:hover {
		border-left-color: var(--primary);
	}

	.category-header:focus {
		outline: none;
		border-left-color: var(--primary);
	}

	@keyframes fadeIn {
		from {
			opacity: 0;
			transform: translateY(5px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	.fade-in {
		animation: fadeIn 0.3s ease-in-out;
	}

	.selector-item {
		transition: all 0.2s ease-in-out;
	}

	.selector-item:hover {
		transform: translateX(2px);
	}

	.option-button {
		position: relative;
		z-index: 1;
		overflow: hidden;
	}

	.option-button::before {
		content: '';
		position: absolute;
		z-index: -1;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-color: var(--primary);
		transform: scaleX(0);
		transform-origin: 0 50%;
		transition: transform 0.3s ease-out;
	}

	.option-button:hover::before {
		transform: scaleX(1);
	}

	.overflow-y-auto::-webkit-scrollbar {
		width: 6px;
	}

	.overflow-y-auto::-webkit-scrollbar-track {
		background: #f1f1f1;
		border-radius: 10px;
	}

	.overflow-y-auto::-webkit-scrollbar-thumb {
		background: #d1d1d1;
		border-radius: 10px;
	}

	.overflow-y-auto::-webkit-scrollbar-thumb:hover {
		background: var(--primary-light);
	}

	.mobile-drawer {
		@apply fixed bottom-0 left-0 right-0 z-40 bg-neutral-100 shadow-lg;
		@apply transform translate-y-full transition-transform duration-300 ease-in-out;
		max-height: 70vh;
		overflow-y: auto;
		border-top: 1px solid var(--neutral);
		@apply dark:bg-neutral-800 dark:text-neutral-light dark:border-neutral-700;
	}

	.mobile-drawer.open {
		@apply translate-y-0;
	}

	.mobile-drawer-content {
		@apply p-4 relative;
	}

	.mobile-drawer-close-button {
		@apply absolute top-2 right-2 w-10 h-10 text-neutral-500 hover:text-neutral-800 z-50;
		@apply dark:text-neutral-400 dark:hover:text-white;
	}

	.mobile-drawer-triggers {
		@apply fixed bottom-0 left-0 right-0 z-30 flex justify-around p-2 backdrop-blur-sm border-t border-neutral;
		@apply flex flex-col;
		@apply bg-primary lg:bg-neutral-dark;
	}

	.mobile-drawer-buttons-container {
		@apply flex flex-row justify-around;
	}

	.drawer-trigger-button {
		@apply mx-1 py-1 text-sm;
	}

	.css-var-editor-toggle-mobile {
		@apply text-sm;
	}

	.css-var-editor-toggle-desktop-container {
		@apply fixed bottom-4 right-4 z-50;
	}

	.css-var-editor-toggle-desktop {
		@apply bg-neutral-200/95 text-primary rounded-full shadow-lg px-3 py-2;
	}

	.css-var-editor {
		@apply md:max-h-[70vh];
		@apply fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2;
		@apply p-0 bg-white dark:bg-neutral-800 shadow-lg rounded-lg z-50;
		@apply w-[calc(100%-2rem)] max-w-md;
		@apply md:fixed md:bottom-4 md:right-4 md:top-auto md:left-auto md:transform-none md:m-0;
		@apply md:w-auto md:max-w-none;
		max-height: calc(70vh - 4rem);
		overflow-y: auto;
	}
}
