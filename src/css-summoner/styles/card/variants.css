@layer components {
	/* ----- モノクロバリエーション（形状バリアント） ----- */

	/*
   * @component: card
   * @variant: solid
   * @description: 塗りつぶしスタイルのカード。背景色とテキスト色が適用されます。
   * @category: container
   * @example: <div class="card-base card-solid theme-neutral">ソリッドカード</div>
   */
	.card-solid {
		background-color: var(--component-color, #fff); /* デフォルトは白背景 */
		color: var(--component-text, #333); /* デフォルトは濃いグレーテキスト */
		border-color: var(
			--component-border,
			#e4e4e4
		); /* デフォルトは薄いグレーボーダー */
	}

	/* solidのホバー/アクティブは通常変化なし。必要なら追加 */

	/*
   * @component: card
   * @variant: outline
   * @description: アウトラインスタイルのカード。枠線のみで背景は透明です。
   * @category: container
   * @example: <div class="card-base card-outline theme-primary">アウトラインカード</div>
   */
	.card-outline {
		background-color: transparent;
		color: var(
			--component-color,
			#333
		); /* テキスト色はコンポーネントカラーに合わせる */
		border-color: var(
			--component-border,
			#333
		); /* ボーダー色はコンポーネントカラー */
	}

	/* outlineのホバーは背景を薄く表示 */
	.card-outline:hover {
		background-color: color-mix(
			in srgb,
			var(--component-color, #333),
			transparent calc(100% - var(--card-outline-hover-opacity, 0.1) * 100%)
		);
	}

	/*
   * @component: card
   * @variant: ghost
   * @description: ゴーストスタイルのカード。背景色も枠線もなく、ホバー時に薄い背景色が表示されます。
   * @category: container
   * @example: <div class="card-base card-ghost theme-secondary">ゴーストカード</div>
   */
	.card-ghost {
		background-color: transparent;
		color: var(--component-color, #333);
		border-color: transparent;
	}

	.card-ghost:hover {
		background-color: color-mix(
			in srgb,
			var(--component-color, #333),
			transparent calc(100% - var(--card-ghost-hover-opacity, 0.05) * 100%)
		);
	}

	/*
   * @component: card
   * @variant: subtle
   * @description: 控えめなカード。薄い背景色が適用され、ホバー時に色が濃くなります。
   * @category: container
   * @example: <div class="card-base card-subtle theme-accent">サブトルカード</div>
   */
	.card-subtle {
		background-color: color-mix(
			in srgb,
			var(--component-color, #e4e4e4),
			/* デフォルトはニュートラル */ transparent 90%
		);
		color: var(--component-color, #333);
		border-color: transparent;
	}

	.card-subtle:hover {
		background-color: color-mix(
			in srgb,
			var(--component-color, #e4e4e4),
			transparent 80%
		);
	}

	/* ----- レイアウト・装飾バリアント（既存クラスの維持） ----- */
	/* 注: これらのクラスは本来 utilities.css に配置するのが望ましい */

	/*
   * @component: card
   * @variant: bordered
   * @description: カードに明示的な境界線を追加します。
   * @category: appearance
   * @example: <div class="card-base card-solid theme-neutral card-bordered">境界線付きカード</div>
   */
	.card-bordered {
		/* base.css で border-width は設定済みなので、ここでは色のみ（カラーセレクタで上書きされる想定） */
		border-color: var(--component-border, var(--card-border, #e4e4e4));
	}

	/*
   * @component: card
   * @variant: compact
   * @description: カード内のパディングを減らし、コンパクトな表示にします。
   * @category: layout
   * @example: <div class="card-base card-solid theme-neutral card-compact">コンパクトカード</div>
   */
	.card-compact .card-body,
	.card-compact .card-header,
	.card-compact .card-footer {
		padding: calc(var(--card-padding) / 1.5);
	}

	/*
   * @component: card
   * @variant: horizontal
   * @description: 画像とコンテンツが横並びになるカード。モバイルでは縦並びになるレスポンシブ対応です。
   * @category: layout
   * @example: <div class="card-base card-solid theme-neutral card-horizontal">...</div>
   */
	.card-horizontal {
		@apply flex flex-col md:flex-row;
	}

	.card-horizontal .card-image {
		@apply w-full md:w-1/3 flex-shrink-0;
		/* 画像コンポーネント側で object-cover を推奨 */
	}

	.card-horizontal .card-body {
		@apply flex-grow;
	}

	/*
   * @component: card
   * @variant: actions
   * @description: カード内でのアクションボタンをグループ化するための領域。
   * @category: layout
   * @example: <div class="card-base card-solid theme-neutral">
   *  <div class="card-body">...</div>
   *  <div class="card-actions">...</div>
   * </div>
   */
	.card-actions {
		@apply flex justify-end mt-4 space-x-2 p-4; /* アクション領域にもパディングを追加 */
	}

	/* ----- ダークモード調整 ----- */
	/* テキスト色やボーダー色はカラーセレクタ側で管理するため、ここでは透明度などの調整のみ */
	.dark .card-outline:hover {
		background-color: color-mix(
			in srgb,
			var(--component-color, #fff),
			/* ダークモードでは白系が基本色になる想定 */ transparent
				calc(100% - var(--card-outline-hover-opacity, 0.2) * 100%)
		);
	}

	.dark .card-ghost:hover {
		background-color: color-mix(
			in srgb,
			var(--component-color, #fff),
			transparent calc(100% - var(--card-ghost-hover-opacity, 0.1) * 100%)
		);
	}

	.dark .card-subtle {
		background-color: color-mix(
			in srgb,
			var(--component-color, #ccc),
			/* ダークモードのサブトル背景 */ transparent 90%
		);
	}

	.dark .card-subtle:hover {
		background-color: color-mix(
			in srgb,
			var(--component-color, #ccc),
			transparent 80%
		);
	}
}
